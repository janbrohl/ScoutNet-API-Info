swagger: '2.0'
info:
  version: '0.2'
  title: Scoutnet.de REST-API

basePath: /api/0.2
produces:
  - application/json
consumes:
  - application/json
externalDocs:
  description: Official documentation (DE)
  url: https://www.scoutnet.de/api-info/webservice.html

paths:
  /group/:
    get:
      summary: Query for a single group
      operationId: query_group
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/group"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["city in ? and federal_state = ?",[["Marburg","Fulda"], "Hessen"]]`
          
          

  /groups/:
    get:
      summary: Query for a collection of groups
      operationId: query_groups
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/groups"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["city in ? and federal_state = ?",[["Marburg","Fulda"], "Hessen"]]`

  /group/{group_id}/:
    get:
      summary: Retrieve a group
      operationId: get_group
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/group"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string

  /group/{group_id}/events/:
    get:
      summary: Retrieve all events for the group
      operationId: get_group_events
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/events"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string

  /group/{group_id}/children/:
    get:
      summary: Retrieve all direct sub-groups for the group
      operationId: get_group_children
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/groups"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string

  /group/{group_id}/parents/:
    get:
      summary: Retrieve all transitive super-groups for the group
      operationId: get_group_parents
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/groups"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string

  /group/{group_id}/parent/:
    get:
      summary: Retrieve the direct super-groups for the group
      operationId: get_group_parent
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/group"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string

  /group/{group_id}/parent/{layer}:
    get:
      summary: Retrieve the transitive super-groups for the group in the given layer
      operationId: get_group_parent_layer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/group"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string
        - name: layer
          in: path
          required: true
          type: string

  /group/{group_id}/urls/:
    get:
      summary: Retrieve all urls for the group
      operationId: get_group_urls
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/urls"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string

  /group/{group_id}/sections/:
    get:
      summary: Retrieve all sections for the group
      operationId: get_group_sections
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/sections"
      parameters:
        - name: group_id
          in: path
          required: true
          type: string

  /event/:
    get:
      summary: Query for a single event
      operationId: query_event
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/event"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["? in sections and organizer in ?",["Rover",["DPSG","WOSM"]]]`

  /events/:
    get:
      summary: Query for a collection of events
      operationId: query_events
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/events"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["? in sections and organizer in ?",["Rover",["DPSG","WOSM"]]]`
 
  /event/{event_id}/:
    get:
      summary: Retrieve an event
      operationId: get_event
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/event"
      parameters:
        - name: event_id
          in: path
          required: true
          type: string

  /event/{event_id}/group/:
    get:
      summary: Retrieve the group for the event
      operationId: get_event_group
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/group"
      parameters:
        - name: event_id
          in: path
          required: true
          type: string

  /url/:
    get:
      summary: Query for a single url
      operationId: query_url
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/url"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["text = ?",["Blog"]]`

  /urls/:
    get:
      summary: Query for a collection of URLs
      operationId: query_urls
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/urls"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["text = ?",["Blog"]]`

  /url/{url_id}/:
    get:
      summary: Retrieve a URL
      operationId: get_url
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/url"
      parameters:
        - name: url_id
          in: path
          required: true
          type: string

  /section/:
    get:
      summary: Query for a single section
      operationId: query_section
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/section"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["name in ? and start_age < ?",[["Pfadfinder", "jungpfadfinder"],13]]`

  /sections/:
    get:
      summary: Query for a collection of sections
      operationId: query_sections
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/sections"
      parameters:
        - name: json
          in: query
          required: true
          type: string
          format: JSON-Array
          description: |-
            MUST be a JSON-serialized array consising of a [PfadiQL](https://www.scoutnet.de/api-info/pfadiql.html)-string and (optional) an array containing ?-masked parameters.
            Example: `["name in ? and start_age < ?",[["Pfadfinder", "jungpfadfinder"],13]]`

  /section/{section_id}/:
    get:
      summary: Retrieve a section
      operationId: get_section
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/section"
      parameters:
        - name: section_id
          in: path
          required: true
          type: string


definitions:
  basic_object:
    title: Basic Object
    description: Beschreibung fehlt
    properties:
      kind:
        title: Object Type
        type: string
    type: object
    
  collection:
    title: Collection
    description: Beschreibung fehlt
    allOf:
    - $ref: "#/definitions/basic_object"
    -
      properties:
        element_kind:
          title: Type of Elements (Items)
          type: string
        elements:
          title: Elements (Items)
          type: array
          items:
            $ref: "#/definitions/basic_object"
        kind:
          type: string
          enum:
            - collection
      type: object

  group:
    title: Group
    description: Beschreibung fehlt
    allOf:
      - $ref: "#/definitions/basic_object"
      -
        properties:
         city:
           description: Beschreibung fehlt
           title: City schema.
           type: string
         country:
           description: Beschreibung fehlt
           title: Country schema.
           type: string
         district:
           description: Beschreibung fehlt
           title: District schema.
           type: string
         federal_state:
           description: Beschreibung fehlt
           title: Federal_state schema.
           type: string
         global_id:
           description: Beschreibung fehlt
           title: Global_id schema.
           type: string
         internal_id:
           description: Beschreibung fehlt
           title: Internal_id schema.
           type: string
         kind:
           enum:
             - group
           type: string
         layer:
           description: Beschreibung fehlt
           title: Layer schema.
           type: string
         name:
           description: Beschreibung fehlt
           title: Name schema.
           type: string
         zip:
           description: Beschreibung fehlt
           title: Zip schema.
           type: string
        type: object

  groups:
    description: Beschreibung fehlt
    title: Group collection
    allOf:
      - $ref: "#/definitions/collection"
      -
        properties:
          element_kind:
            type: string
            enum:
              - "group"
          elements:
            items:
              $ref: "#/definitions/group"
            type: array
        type: object

  section:
    title: Section
    description: Beschreibung fehlt
    allOf:
      - $ref: "#/definitions/basic_object"
      -
        properties:
          color:
            description: Beschreibung fehlt
            title: Color schema.
            type: string
          end_age:
            description: Beschreibung fehlt
            title: End_age schema.
            type: string
            format: number
          id:
            description: Beschreibung fehlt
            title: Id schema.
            type: string
          kind:
            enum:
              - section
            type: string
          name:
            description: Beschreibung fehlt
            title: Name schema.
            type: string
          start_age:
            description: Beschreibung fehlt
            title: Start_age schema.
            type: string
            format: number
        type: object

  sections:
    description: Beschreibung fehlt
    title: Section collection
    allOf:
      - $ref: "#/definitions/collection"
      -
        properties:
          element_kind:
            type: string
            enum:
              - "section"
          elements:
            items:
              $ref: "#/definitions/section"
            type: array
        type: object

  url:
    title: URL
    description: Beschreibung fehlt
    allOf:
      - $ref: "#/definitions/basic_object"
      -
        properties:
          group_id:
            description: Beschreibung fehlt
            title: Group_id schema.
            type: string
          id:
            description: Beschreibung fehlt
            title: Id schema.
            type: string
          kind:
            enum:
              - url
            type: string
          text:
            description: Beschreibung fehlt
            title: Text schema.
            type: string
          url:
            description: Beschreibung fehlt
            format: uri
            title: Url schema.
            type: string
        type: object

  urls:
    description: Beschreibung fehlt
    title: URL collection
    allOf:
      - $ref: "#/definitions/collection"
      -
        properties:
          element_kind:
            type: string
            enum:
              - "url"
          elements:
            items:
              $ref: "#/definitions/url"
            type: array
        type: object

  event:
    title: Event
    description: Beschreibung fehlt
    allOf:
      - $ref: "#/definitions/basic_object"
      -
        properties:
          description:
            description: Beschreibung fehlt
            title: Description schema.
            type: string
          end_date:
            description: Beschreibung fehlt
            title: End_date schema.
            type: string
            format: date
          end_time:
            description: Beschreibung fehlt
            title: End_time schema.
            type: string
            format: time
          group_id:
            description: Beschreibung fehlt
            title: Group_id schema.
            type: string
          id:
            description: Beschreibung fehlt
            title: Id schema.
            type: string
          keywords:
            description: Beschreibung fehlt
            properties:
              elements:
                description: Beschreibung fehlt
                title: Elements schema.
                type: object
              kind:
                description: Beschreibung fehlt
                title: Kind schema.
                type: string
                enum:
                  - "collection"
            title: Keywords schema.
            type: object
          kind:
            enum:
              - event
            type: string
          last_modified_by:
            description: Beschreibung fehlt
            title: Last_modified_by schema.
            type: string
          last_modified_on:
            description: Beschreibung fehlt
            format: date-time
            title: Last_modified_on schema.
            type: string
          location:
            description: Beschreibung fehlt
            title: Location schema.
            type: string
          organizer:
            description: Beschreibung fehlt
            title: Organizer schema.
            type: string
          start_date:
            description: Beschreibung fehlt
            title: Start_date schema.
            type: string
            format: date
          start_time:
            description: Beschreibung fehlt
            title: Start_time schema.
            type: string
            format: time
          target_group:
            description: Beschreibung fehlt
            title: Target_group schema.
            type: string
          title:
            description: Beschreibung fehlt
            title: Title schema.
            type: string
          uid:
            description: Beschreibung fehlt
            title: Uid schema.
            type: string
          url:
            description: Beschreibung fehlt
            format: uri
            title: Url schema.
            type: string
          url_text:
            description: Beschreibung fehlt
            title: Url_text schema.
            type: string
          zip:
            description: Beschreibung fehlt
            title: Zip schema.
            type: string
        type: object

  events:
    description: Beschreibung fehlt
    title: Event collection
    allOf:
      - $ref: "#/definitions/collection"
      -
        properties:
          element_kind:
            type: string
            enum:
              - "event"
          elements:
            items:
              $ref: "#/definitions/event"
            type: array
        type: object

  exception:
    title: Exception
    description: Beschreibung fehlt
    allOf:
      - $ref: "#/definitions/basic_object"
      -
        description: Beschreibung fehlt
        properties:
          message:
            description: Beschreibung fehlt
            title: Message schema.
            type: string
          kind:
            type: string
            enum:
              - "exception"
        type: object

